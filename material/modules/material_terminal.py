import asyncio

from telethon.tl.types import Message
from .. import loader, utils

async def bash_exec(command):
    a = await asyncio.create_subprocess_shell(
        command.strip(), 
        stdin=asyncio.subprocess.PIPE,
        stdout=asyncio.subprocess.PIPE,
        stderr=asyncio.subprocess.PIPE
    )
    
    if not (out := await a.stdout.read(-1)):
        try:
            return (await a.stderr.read(-1)).decode()
        except UnicodeDecodeError:
            return f'Unicode decode error: {(await a.stderr.read(-1))}'
    else:
        try:
            return out.decode()
        except UnicodeDecodeError:
            return f'Unicode decode error: {out}'

class MaterialTerminalMod(loader.Module):
    """–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª BASH –ø—Ä—è–º–æ —á–µ—Ä–µ–∑ Material!"""
    strings = {'name': 'Terminal'}

    async def terminalcmd(self, message: Message):
        """–ò—Å–ø–æ–ª–∑–æ–≤–∞—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª"""
        await utils.answer(message, "üëª")
        
        args = utils.get_args_raw(message)
        output = await bash_exec(args)

        await utils.answer(
            message,
            "‚å®Ô∏è"
            f" <b>–°–∏—Å—Ç–µ–º–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞:</b> <code>{args}</code>\n"
            f"üíæ <b>–í—ã–≤–æ–¥:</b>\n<code>"
            f"{output}"
            "</code>"
        )